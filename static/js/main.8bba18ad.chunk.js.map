{"version":3,"sources":["components/Joke.tsx","components/Favorite.tsx","components/Placeholder.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Jokes","joke","onFavorite","onUnFavorite","useState","checked","setChecked","useEffect","ListItem","Label","CheckboxContainer","HiddenCheckbox","onClick","StyledCheckbox","viewBox","fill","width","height","d","styled","li","label","div","input","attrs","type","Favorite","props","Placeholder","App","error","setError","isLoaded","setIsLoaded","isInterval","setIsInterval","data","setData","allData","setAllData","newJoke","setNewJoke","favorites","setFavorites","console","log","fetchLocalData","fetchData","setTimer","localFavorites","localStorage","getItem","JSON","parse","a","fetch","then","res","json","result","value","newData","pop","intervalId","setInterval","clearInterval","length","newFavorites","filter","item","push","setItem","stringify","found","find","id","index","indexOf","splice","message","Container","GlobalStyle","Header","Grid","container","direction","spacing","map","xs","lg","Joke","ButtonGroup","Button","ButtonSecondary","Favorites","createGlobalStyle","h1","button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bba18ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ValueModel } from \"../models/ValueModel\";\r\n\r\ntype Props = {\r\n  joke: ValueModel;\r\n  onFavorite: (joke: ValueModel) => void;\r\n  onUnFavorite: (joke: ValueModel) => void;\r\n};\r\n\r\nconst Jokes = ({ joke, onFavorite, onUnFavorite }: Props) => {\r\n  const [checked, setChecked] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (checked) {\r\n      onFavorite(joke);\r\n    } else {\r\n      onUnFavorite(joke);\r\n    }\r\n  }, [checked]);\r\n\r\n  return (\r\n    <ListItem>\r\n      {joke.joke}\r\n      <Label>\r\n        <CheckboxContainer>\r\n          <HiddenCheckbox onClick={() => setChecked(!checked)} />\r\n          <StyledCheckbox>\r\n            <svg viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\">\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\r\n            </svg>\r\n          </StyledCheckbox>\r\n        </CheckboxContainer>\r\n      </Label>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Jokes;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-height: 120px;\r\n  background: white;\r\n  padding: 20px;\r\n  list-style-type: none;\r\n  border-radius: 14px;\r\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  -moz-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CheckboxContainer = styled.div`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  margin-left: 20px;\r\n  background: lightgrey;\r\n  border-radius: 50%;\r\n  transition: background 0.2s ease;\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px pink;\r\n  }\r\n\r\n  &:hover {\r\n    background: pink;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ValueModel } from \"../models/ValueModel\";\r\n\r\ntype Props = {\r\n  joke: ValueModel;\r\n  onUnFavorite: (joke: ValueModel) => void;\r\n};\r\n\r\nconst Favorite = ({ joke, onUnFavorite }: Props) => {\r\n  return (\r\n    <ListItem>\r\n      {joke.joke}\r\n      <Label>\r\n        <CheckboxContainer checked={true}>\r\n          <HiddenCheckbox onClick={() => onUnFavorite(joke)} />\r\n          <StyledCheckbox checked={true}>\r\n            <svg viewBox=\"0 0 24 24\" fill=\"white\" width=\"18px\" height=\"18px\">\r\n              <path d=\"M0 0h24v24H0z\" fill=\"none\" />\r\n              <path d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\" />\r\n            </svg>\r\n          </StyledCheckbox>\r\n        </CheckboxContainer>\r\n      </Label>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Favorite;\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  min-height: 120px;\r\n  align-items: center;\r\n  background: white;\r\n  padding: 20px;\r\n  list-style-type: none;\r\n  border-radius: 14px;\r\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  -moz-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n`;\r\n\r\nconst Label = styled.label`\r\n  margin-right: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst CheckboxContainer = styled.div<{ checked: boolean }>`\r\n  display: inline-block;\r\n  vertical-align: middle;\r\n`;\r\n\r\nconst HiddenCheckbox = styled.input.attrs({ type: \"checkbox\" })`\r\n  border: 0;\r\n  clip: rect(0 0 0 0);\r\n  clippath: inset(50%);\r\n  height: 1px;\r\n  margin: -1px;\r\n  overflow: hidden;\r\n  padding: 0;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n`;\r\n\r\nconst StyledCheckbox = styled.div<{ checked: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 36px;\r\n  height: 36px;\r\n  margin-left: 20px;\r\n  background: ${(props) => (props.checked ? \"pink\" : \"lightgrey\")};\r\n  border-radius: 50%;\r\n  transition: background 0.2s ease;\r\n\r\n  ${HiddenCheckbox}:focus + & {\r\n    box-shadow: 0 0 0 3px pink;\r\n  }\r\n\r\n  &:hover {\r\n    background: lightgrey;\r\n  }\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Placeholder = () => {\r\n  return (\r\n    <ListItem>\r\n      There are no favorites yet. Favorite a joke to display them here.\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default Placeholder;\r\n\r\nconst ListItem = styled.li`\r\n  color: #cecece;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  min-height: 120px;\r\n  background: white;\r\n  padding: 20px;\r\n  list-style-type: none;\r\n  border-radius: 14px;\r\n  -webkit-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  -moz-box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n  box-shadow: 0px 2px 6px 0px rgba(50, 50, 50, 0.1);\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport styled, { createGlobalStyle } from \"styled-components\";\r\n\r\n// components\r\nimport Joke from \"./components/Joke\";\r\nimport Favorite from \"./components/Favorite\";\r\nimport Placeholder from \"./components/Placeholder\";\r\n\r\n// models\r\nimport { JokeModel } from \"./models/JokeModel\";\r\nimport { ValueModel } from \"./models/ValueModel\";\r\n\r\nfunction App() {\r\n  const [error, setError] = useState<any>();\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n  const [isInterval, setIsInterval] = useState<boolean>(false);\r\n  const [data, setData] = useState<ValueModel[]>([]);\r\n  const [allData, setAllData] = useState<ValueModel[]>();\r\n  const [newJoke, setNewJoke] = useState<ValueModel>();\r\n  const [favorites, setFavorites] = useState<ValueModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    console.log(favorites);\r\n    fetchLocalData();\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!allData) return;\r\n    if (isInterval) {\r\n      setData([]);\r\n      setTimer(allData);\r\n    } else {\r\n      setData(allData);\r\n    }\r\n  }, [isInterval, allData]);\r\n\r\n  useEffect(() => {\r\n    if (!newJoke) return;\r\n    setData([...data, newJoke]);\r\n  }, [newJoke]);\r\n\r\n  const fetchLocalData = () => {\r\n    const localFavorites = localStorage.getItem(\"jokes\");\r\n    if (localFavorites !== null) {\r\n      setFavorites(JSON.parse(localFavorites));\r\n    }\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    fetch(\"https://api.icndb.com/jokes/random/10/\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result: JokeModel) => {\r\n          setIsInterval(false);\r\n          setIsLoaded(true);\r\n          setAllData(result.value);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  const setTimer = (allData: ValueModel[]) => {\r\n    const newData = [...allData];\r\n    setNewJoke(newData.pop());\r\n\r\n    const intervalId = setInterval(() => {\r\n      const joke = newData.pop();\r\n      if (joke) {\r\n        setNewJoke(joke);\r\n      } else {\r\n        clearInterval(intervalId);\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  const onFavorite = (joke: ValueModel) => {\r\n    if (favorites.length === 10) return;\r\n    const newFavorites = [...favorites];\r\n    setData(data.filter((item) => item !== joke));\r\n    newFavorites.push(joke);\r\n    localStorage.setItem(\"jokes\", JSON.stringify(newFavorites));\r\n    fetchLocalData();\r\n  };\r\n\r\n  const onUnFavorite = (joke: ValueModel) => {\r\n    const newFavorites = [...favorites];\r\n    const found = newFavorites.find((item) => item.id === joke.id);\r\n\r\n    if (found) {\r\n      const index = newFavorites.indexOf(found);\r\n      newFavorites.splice(index, 1);\r\n      localStorage.setItem(\"jokes\", JSON.stringify(newFavorites));\r\n      fetchLocalData();\r\n    }\r\n  };\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return (\r\n      <Container>\r\n        <GlobalStyle />\r\n        <h1>Jokes 😂</h1>\r\n        <div>Loading jokes...</div>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container>\r\n        <GlobalStyle />\r\n        <Header>Jokes 😂</Header>\r\n\r\n        <Grid container direction=\"row\" spacing={4}>\r\n          {data?.map((item, index) => (\r\n            <Grid item xs={12} lg={6} key={index}>\r\n              <Joke\r\n                joke={item}\r\n                onFavorite={onFavorite}\r\n                onUnFavorite={onUnFavorite}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n\r\n        <ButtonGroup>\r\n          <Grid container direction=\"row\" spacing={6}>\r\n            <Grid item lg={3} xs={12}>\r\n              <Button onClick={fetchData}>Load more jokes</Button>\r\n            </Grid>\r\n            <Grid item lg={3} xs={12}>\r\n              <ButtonSecondary onClick={() => setIsInterval(true)}>\r\n                Set timer for 10 jokes\r\n              </ButtonSecondary>\r\n            </Grid>\r\n          </Grid>\r\n        </ButtonGroup>\r\n\r\n        <Header>Favorites💗</Header>\r\n\r\n        <Grid container direction=\"row\" spacing={4}>\r\n          {favorites.length !== 0 ? (\r\n            favorites.map((item, index) => (\r\n              <Grid item xs={12} lg={6} key={index}>\r\n                <Favorite joke={item} onUnFavorite={onUnFavorite} />\r\n              </Grid>\r\n            ))\r\n          ) : (\r\n            <Favorites>\r\n              <Grid item xs={12}>\r\n                <Placeholder />\r\n              </Grid>\r\n            </Favorites>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: #f5f9ff;\r\n  }\r\n`;\r\n\r\nconst Header = styled.h1`\r\n  margin: 100px 0 40px 0;\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  border: 2px solid #214252;\r\n  background: #214252;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  padding: 20px 30px;\r\n  width: 100%;\r\n  transition: background 0.2s ease;\r\n\r\n  &:hover {\r\n    background: #34596b;\r\n  }\r\n`;\r\n\r\nconst ButtonSecondary = styled.button`\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  border: 2px solid #214252;\r\n  color: #214252;\r\n  background: none;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  padding: 20px 30px;\r\n  width: 100%;\r\n  transition: background 0.2s ease;\r\n\r\n  &:hover {\r\n    background: #214252;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Favorites = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 100px;\r\n`;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}